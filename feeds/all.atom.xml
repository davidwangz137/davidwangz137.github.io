<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Dedalus Dreams</title><link href="https://davidwangz137.github.io/" rel="alternate"></link><link href="https://davidwangz137.github.io/feeds/all.atom.xml" rel="self"></link><id>https://davidwangz137.github.io/</id><updated>2016-12-11T16:39:00+01:00</updated><entry><title>Endgame Part 3</title><link href="https://davidwangz137.github.io/endgame-part-3.html" rel="alternate"></link><published>2016-12-11T16:39:00+01:00</published><updated>2016-12-11T16:39:00+01:00</updated><author><name>Zhiyuan Wang</name></author><id>tag:davidwangz137.github.io,2016-12-11:endgame-part-3.html</id><summary type="html">&lt;p&gt;I finished my graph theory exam on Friday. I made a few mistakes but overall I solved all questions. I'm feeling pretty good about it. I'm slowly moving away from trying to get high grades in everything and instead focusing on learning more things by reading textbooks and just coding. Really reading over the notes of these courses doesn't really teach much and gets demoralizing over time.&lt;/p&gt;
&lt;p&gt;I'm trying to slowly reform my worldview so it is more accurate but also faster. I think one way to do this is to continually read so that the mind often encounters new situations which cannot be resolved by the current system. Then the mind can try to adapt the system to handle the situation. But of course, some problems are insurmountable and thinking about them at depth without much of a handle on it is like a brute force search for solutions without revealing much insight about the problem. So I'm still trying to find a way to obtain a steady stream of improvement. I used to read &lt;a href="aeon.co"&gt;Aeon&lt;/a&gt; often but its not really a steady stream (some articles about history bore me. Some of the ethics articles don't present convincing arguments). I guess I can frequent Hacker news more for technology related topics. But I guess for big reformations I'll have to hit the books. One thing that I have realized is that having a guide through a book is really useful for understanding the content. Some books are dense and indigestible though they contain very powerful information ("bombs"). Only through introspection and hard consideration are these books ("nuclear stockpiles") accessible. Of course thats a fine price to pay considering the gains. But I have to approach these with the right mindset or else the information will just sail right past me.&lt;/p&gt;
&lt;p&gt;My energy levels have been good recently ever since I've recovered from the cold. I'm thinking of creating a logging category because these posts seem banal and really if I do produce good content then I'll want those to be labeled somehow.&lt;/p&gt;</summary></entry><entry><title>Endgame</title><link href="https://davidwangz137.github.io/endgame.html" rel="alternate"></link><published>2016-11-26T12:03:00+01:00</published><updated>2016-11-26T12:03:00+01:00</updated><author><name>Zhiyuan Wang</name></author><id>tag:davidwangz137.github.io,2016-11-26:endgame.html</id><summary type="html">&lt;p&gt;I need to focus down now that my next work term is coming. I really don't like days when I don't accomplish much. I realize how important time is and I need to keep on reminding myself of it to get motivation to do the things I want. Really I get complacent by looking at how well my life is going and then I don't see that if I don't stop getting better then I'll stop being good. Accepting boredom now allows you to minimize boredom later on in life. Of course there are criticisms of this philosophy but having an enjoyable job really takes the fucking cake as you spend half your awake day working so it better be good. So you optimize your hobbies or your work. Optimizing your work is a riskier bet because you might not get the job you want but if you get a job where you can learn and so get to the job you want (as a developer would) then it limits the risk. Optimizing hobbies doesn't work for all people for a variety of reasons: some hobbies take an extraordinary amount of effort which means you can't do them too often (so in proportion to your work they make up only that much, and so might not offset the pain of work). Another problem is that after work you might be too tired to pursue your hobby with the energy necessary for your happiness.&lt;/p&gt;
&lt;p&gt;But for those people who pursue their hobbies and work at the same time, you've done great. I guess my only hobby that I would like is playing piano, since I'm somewhat proficient (at least technically) and enjoy music. But really I can't practice for too long and it is frustrating at time. Like frustrating without rewarda dn it just makes me more depressed. I've gotten used to reading books and the joy of understanding concepts which usually just require some hard thinking (though as things get more advanced, this might be less possible). I guess I can simply learn new pieces if I can't learn the current one. So the main problem with playing piano is the time constraint on playing it, while for intellectual activities you can go at it for four hours a day without fatigue (spaced out through the day of course).&lt;/p&gt;
&lt;p&gt;But of course the intellectual activities matter. I've been trying to get through Diestel but its fucking dense as shit and as frustrating as playing the piano. Some of the sentences don't make sense at all. So recently I've been following the Big Data Infrastructure &lt;a href="http://lintool.github.io/bigdata-2016w/index.html"&gt;course&lt;/a&gt;, where the information is pretty mellow and I can be happy that I'm learning something (though obviously they talk over the slides so some important information is lost). I plan to do the assignments if the Java doesn't kill me. I don't have access to a cluster but I guess I can learn how to do that with Amazon EC2. I only have to spin them up when I need them so it shouldn't cost that much. I literally don't care about using this for a side project so all the anxiety associated with such things is gone. I used to have this anxiety where I have to do things perfectly in order to match up to people's expectations but really it was just a load of nonsense in my head. Imperfect is better than not done at all. After all, I'm doing these things for my own learning. If I deploy to production I'll have to do more screening anyways. But for me to even have something to deploy I'll need to learn the tools. So fuck everything, do what I like... but also try to get interested in the things that are important.&lt;/p&gt;
&lt;p&gt;There is a kind of conflict within me. There are things which I'm naturally interested in but there are things which I develop interest in because they are related to those things which I'm interested in. But then I find out that I'm interested in those things as well. Is there a hidden vector of my interests which gets realized in the things I learn? How should I best search the space of such things? If the landscape of interest changes what policy should I follow to adjust. These types of things are studied in optimization and really there are many heuristics for search (local search especially, since that is basically what I'm doing). I should see how they can be applied to my everyday life (if they even can) and then accept the necessary limits of my ability to search.&lt;/p&gt;
&lt;p&gt;I've decided not to get a new laptop for now. This is more of a financial decision: I don't want to spend any money until I get paid by Disney. Then I'll feel more comfortable spending money.&lt;/p&gt;</summary></entry><entry><title>Endgame Part 2</title><link href="https://davidwangz137.github.io/endgame-part-2.html" rel="alternate"></link><published>2016-11-26T12:03:00+01:00</published><updated>2016-11-26T12:03:00+01:00</updated><author><name>Zhiyuan Wang</name></author><id>tag:davidwangz137.github.io,2016-11-26:endgame-part-2.html</id><summary type="html">&lt;p&gt;I got sick which is wonderful for productivity. I'm still experimenting with how much time I need to recover and managing my energy levels. Not sure if I'm making the optimal use of my time but I'll iterate on what I have. Basically work for an hour or so then take a break. I wonder what I should do in my break? Something mindless so to let my mind not have to focus? Or something mildly stimulating like light gaming? I'll try different things and note the effects.&lt;/p&gt;
&lt;p&gt;I'm thinking of doing some algebraic topology after I finish the assignments for CS489. The assignments don't look that bad since I can't do half the assignment which requires access to a cluster. I can set my own up on Amazon but I'd rather do something else. We'll see then.&lt;/p&gt;
&lt;p&gt;I find that I like writing these articles now. They allow me to destress throughout the day. I can write these with a medium level of focus but some parts can be shit since I stopped caring too much about it. I just want there to be some good information in these sentences which requires some coherence. But I'm not trying to condense at all or be precise like in a proof so it doesn't take extreme focus. I noticed that writing my real analysis assignments (the act of writing itself, not even solving the problems) is very intense. I guess its because there is some checking involved when I'm writing it so that activates a lot of my knowledge of the course.&lt;/p&gt;
&lt;p&gt;I might actually get a new computer, since this machine is actually noticeably slow. I think a large bottleneck for me is actually not being able to bring out my laptop and start typing immediately when I want to work. Of course there is the computation time but when I'm just writing code to play around with or writing up assignments that is definitely not the bottleneck. I'll continue to think about it. Really I don't lose much time there is a barrier to working on my computer which I'd like to overcome.&lt;/p&gt;</summary></entry><entry><title>Keeping myself sharp</title><link href="https://davidwangz137.github.io/keeping-myself-sharp.html" rel="alternate"></link><published>2016-11-19T09:53:00+01:00</published><updated>2016-11-19T09:53:00+01:00</updated><author><name>Zhiyuan Wang</name></author><id>tag:davidwangz137.github.io,2016-11-19:keeping-myself-sharp.html</id><summary type="html">&lt;p&gt;Over the terms my programming ability has fluctuated going into study terms and then coop and then back. I feel like on study terms my code is more "academic" and consists of one-off hacks to get things working without thinking much of what happens later. When I'm working I think carefully about what I write and refactor as I go. Being a junior developer my code still looks like spaghetti and I believe I need to write more in order to get a "feel" for what works and doesn't.&lt;/p&gt;
&lt;p&gt;Before I go to Disney Research for my internship I want to get familiar with pandas, scikit-learn, some DL learning library (Tensorflow?) and STAN. I'm not sure how I want to do this though. I could compete on Kaggle. Or I could try one of the graduate ML courses online which require coding, but those are just academic hacks and really most of the problem is just thinking things through.&lt;/p&gt;
&lt;p&gt;I guess I can try to replicate a paper's results like &lt;a href="https://www.tensorflow.org/versions/r0.11/tutorials/seq2seq/index.html#sequence-to-sequence-models"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But then I want a computer with a GPU so this doesn't take forever to run. But I can't get a good deal on a laptop before I get to the US since my stipend doesn't arrive until then. Might be time to make a risky decision, but I'd rather wait until the time of best savings.&lt;/p&gt;
&lt;p&gt;I really don't want this to take a day:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;sess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;optimizer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;feed_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;batch_x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;batch_y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                   &lt;span class="n"&gt;seqlen&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;batch_seqlen&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;But if it would take a day then with a GPU it would take an hour. That is fine. Then I can prepare visualization scripts or start coding up the next segment. But a day turnover will severly limit the number of experiments that I can perform.&lt;/p&gt;</summary></entry><entry><title>Mathematical Crossroads</title><link href="https://davidwangz137.github.io/mathematical-crossroads.html" rel="alternate"></link><published>2016-11-19T09:04:00+01:00</published><updated>2016-11-19T09:04:00+01:00</updated><author><name>Zhiyuan Wang</name></author><id>tag:davidwangz137.github.io,2016-11-19:mathematical-crossroads.html</id><summary type="html">&lt;p&gt;I'm currently at a crossroads with regards to my education. I want to venture further into the field of machine learning which requires skill in continuous mathematics. But my love is for mathematics such as graph theory and discrete optimization. Maybe this is just a temporary infatuation and once I get into the functional analysis and algebraic topology I will forget myself once again.&lt;/p&gt;
&lt;p&gt;I've been eyeing Edelsbrunners "Computational Topology" but I feel my algebra and topology is too weak. Then I'll have to tackle differential geometry to understand things like natural gradients. Really the mathematics leans continuous.&lt;/p&gt;
&lt;p&gt;But I'm prepared to make the long journey. I mean, I'm going to be a researcher so improving my knowledge and the ability to apply it will only make stronger.&lt;/p&gt;
&lt;p&gt;But I've come to appreciate the following polytope:
&lt;/p&gt;
&lt;div class="math"&gt;$$x(\delta(v)) = 1 \quad \forall v \in V$$&lt;/div&gt;
&lt;div class="math"&gt;$$x(\delta(S)) \geq 1 \quad \forall S \subsetneq V, |S| \geq 3, |S|\&amp;gt;\text{odd}$$&lt;/div&gt;
&lt;div class="math"&gt;$$x_e \geq 0 \quad \forall e \in E$$&lt;/div&gt;
&lt;p&gt;This describes the convex hull of all perfect matchings on &lt;span class="math"&gt;\(G = (V,E)\)&lt;/span&gt;. This and its dual (given an objective vector &lt;span class="math"&gt;\(w\)&lt;/span&gt;) give great intuition for understanding Edmond's Blossom algorithm for general weighted matching where changing the value of the dual variables correspond to shrinking and unshrinking of nodes. I still have to read through the textbook for all the full details (but then I can be reading other books).&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary></entry><entry><title>Small Inefficiencies</title><link href="https://davidwangz137.github.io/small-inefficiencies.html" rel="alternate"></link><published>2016-11-19T08:11:00+01:00</published><updated>2016-11-19T08:11:00+01:00</updated><author><name>Zhiyuan Wang</name></author><id>tag:davidwangz137.github.io,2016-11-19:small-inefficiencies.html</id><summary type="html">&lt;p&gt;I notice that throughout the day there are periods where my concentration slips and I cannot focus very well. I believe that during these times I should rest in order to recover my energy but I don't. There are periods of being slightly tired and so I've gotten used to pushing forwards until my focus comes back. But when I've actually become fatigued this leads to somewhat terrible time sink of me trying to do something but due to my lack of energy for the whole time it proceeds at half or even slower rate than what I'd have if I could focus.&lt;/p&gt;
&lt;p&gt;I wish I could have a better awareness of my mental state. The problem that occurs for detecting lack of energy is that you need to ping for your energy level but if you have low energy then you may forget to ping and then you get into the time sinkhole.&lt;/p&gt;
&lt;p&gt;I spend some good amount of time worrying about things as well. Some of the things I worry about are unboundable and really if they happen then it just sucks. I can only live life in a way that minimizes risk. Because I didn't have a good awareness and desire to think about the situation I was in I lost many opportunities and performed quite suboptimally. I believe a stronger situational awareness would have helped me mitigate these problems. So now I prepare, but I still have to find a good balance for how much energy I should spend towards this. There are many rewards for being situationally aware such as the ability to capitalize on opportunities. I don't recall any opportunities that I have cashed in on due to heightened awareness though I'll now try to be more aware and see if I get any positive results. If so, then this would be good motivation. I don't want to drop my guard since everything seems to be going well and then get rekt.&lt;/p&gt;</summary></entry><entry><title>Reading other People's blogs</title><link href="https://davidwangz137.github.io/reading-other-peoples-blogs.html" rel="alternate"></link><published>2016-11-18T10:33:00+01:00</published><updated>2016-11-18T10:33:00+01:00</updated><author><name>Zhiyuan Wang</name></author><id>tag:davidwangz137.github.io,2016-11-18:reading-other-peoples-blogs.html</id><summary type="html">&lt;p&gt;I've started reading more blogs in order to find out what would be good content for me to put and not create posts which are copies or worse (like Pareto efficient worse) than the posts which currently exist on the internet. I believe it is much better to link those posts. The effects of writing the exact same post can be done better by other means. For example if I have an opinion on a topic and was going to write almost point for point the same post that somebody else had on the topic, it might be better for me to link to the post and hae commentary to specific points and built upon the arguments made. This allows me to refer back to the original post as a reference but also have my own post for my own viewpoint and why I feel that way (my intuition). After all, creating things is very energy intensive. If it is already there then finding a way to use it so that it becomes a part of your intuition (though probably not as much as if you derived it yourself, but still deep enough that you can apply it well) doesn't take up as much effort.&lt;/p&gt;
&lt;p&gt;Also by reading other blogs I get a sense for what things are good to post. I see some posts which make me cringe and I would rather not post things like those (or too many. This post is pretty cringe-worthy currently).&lt;/p&gt;</summary></entry><entry><title>Planning Time</title><link href="https://davidwangz137.github.io/planning-time.html" rel="alternate"></link><published>2016-11-17T09:22:00+01:00</published><updated>2016-11-17T09:22:00+01:00</updated><author><name>Zhiyuan Wang</name></author><id>tag:davidwangz137.github.io,2016-11-17:planning-time.html</id><summary type="html">&lt;p&gt;I created this blog to keep me motivated to work hard. By letting everyone see what I've accomplished so far they can fit a local curve to where I should be in some short but significant time interval. Then I will feel some pressure to meet their expectations and become better. If I do become worse, then I can see this in evidence and then try to make things better instead of being in denial ("its not THAT bad"). Though some of the things I do will be risky and not yield any outcome for a long while (and may not even do anything in the end), by exposing them explicitly I won't forget why I'm doing them and how I calculated the reward/risk which let me take the decision.&lt;/p&gt;
&lt;p&gt;So why did I choose to write this instead of a journal? I noticed that in my journal my audience is only myself so my writing style never improves. As I publish more of these articles I'll read over them and realize how terrible the style is and then want to slowly improve my writing (since I'll be rereading the articles to check on my progress).&lt;/p&gt;
&lt;p&gt;Currently I'm in my 3A term at Waterloo in a CS and CO double major. I have a lot of work ahead of me so I decided to preemptively procrastinate by creating this blog to replace the edgelord site that I had previously. Then as more posts come along I can invest more and more into the website as I see it is worth it. I've realized that motivation is a huge bottleneck for me so that is one way to overcome some situations where motivation is lacking is by careful reward/risk analysis. Investing only enough time to get a result where its efficient to add pieces at a time and not all at once is very good for such a mindset. Then the feedback from the task adds back to the motivation levels allowing more work to be done. This allows me to avoid things like starting on something and feeling made halfway because I didn't feel like I did jack shit for the day since I have nothing to show. Also this may make me more efficient by quiantifying things, though there is the overhead of quantification.&lt;/p&gt;
&lt;p&gt;And my writing is still terrible. There was no coherent organization in the last paragraph. Just a fucking mind-dump. I got too used to writing journals like this that this has become my style. Well, the journey of 1000 li starts with one step... onto an airplane which flies you the whole way.&lt;/p&gt;</summary></entry><entry><title>Hello World!</title><link href="https://davidwangz137.github.io/hello-world.html" rel="alternate"></link><published>2016-11-17T09:12:00+01:00</published><updated>2016-11-17T09:12:00+01:00</updated><author><name>Zhiyuan Wang</name></author><id>tag:davidwangz137.github.io,2016-11-17:hello-world.html</id><summary type="html">&lt;p&gt;I've finally decided to go to blog format website and just use a library to handle all the bloggin instead of implementing my own. That would be fun but I feel like dedicating my time to other pursuits would be more interesting and be better since I'm not going to be a web developer. Saying that, back to work. I'm going to post a few things here and now about what I'm currently doing and some thoughts I have. I keep a journal so I'll try to only write insightful things. I might add a comment system later so people to comment on what I write (and point out my glaring errors/fallacies) but that is for another time.&lt;/p&gt;</summary></entry></feed>