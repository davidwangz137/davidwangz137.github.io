<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Dedalus Dreams</title><link href="https://davidwangz137.github.io/" rel="alternate"></link><link href="https://davidwangz137.github.io/feeds/programming.atom.xml" rel="self"></link><id>https://davidwangz137.github.io/</id><updated>2016-11-19T09:53:00+01:00</updated><entry><title>Keeping myself sharp</title><link href="https://davidwangz137.github.io/keeping-myself-sharp.html" rel="alternate"></link><published>2016-11-19T09:53:00+01:00</published><updated>2016-11-19T09:53:00+01:00</updated><author><name>Zhiyuan Wang</name></author><id>tag:davidwangz137.github.io,2016-11-19:keeping-myself-sharp.html</id><summary type="html">&lt;p&gt;Over the terms my programming ability has fluctuated going into study terms and then coop and then back. I feel like on study terms my code is more "academic" and consists of one-off hacks to get things working without thinking much of what happens later. When I'm working I think carefully about what I write and refactor as I go. Being a junior developer my code still looks like spaghetti and I believe I need to write more in order to get a "feel" for what works and doesn't.&lt;/p&gt;
&lt;p&gt;Before I go to Disney Research for my internship I want to get familiar with pandas, scikit-learn, some DL learning library (Tensorflow?) and STAN. I'm not sure how I want to do this though. I could compete on Kaggle. Or I could try one of the graduate ML courses online which require coding, but those are just academic hacks and really most of the problem is just thinking things through.&lt;/p&gt;
&lt;p&gt;I guess I can try to replicate a paper's results like &lt;a href="https://www.tensorflow.org/versions/r0.11/tutorials/seq2seq/index.html#sequence-to-sequence-models"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But then I want a computer with a GPU so this doesn't take forever to run. But I can't get a good deal on a laptop before I get to the US since my stipend doesn't arrive until then. Might be time to make a risky decision, but I'd rather wait until the time of best savings.&lt;/p&gt;
&lt;p&gt;I really don't want this to take a day:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;sess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;optimizer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;feed_dict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;batch_x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;batch_y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                   &lt;span class="n"&gt;seqlen&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;batch_seqlen&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;But if it would take a day then with a GPU it would take an hour. That is fine. Then I can prepare visualization scripts or start coding up the next segment. But a day turnover will severly limit the number of experiments that I can perform.&lt;/p&gt;</summary></entry></feed>